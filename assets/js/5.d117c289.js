(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{370:function(v,_,t){v.exports=t.p+"assets/img/cdn.e3656d8a.png"},371:function(v,_,t){v.exports=t.p+"assets/img/nocachecdn.1e5440b9.png"},372:function(v,_,t){v.exports=t.p+"assets/img/cachecdn.bfd05f0d.png"},397:function(v,_,t){"use strict";t.r(_);var s=t(45),n=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"cdn相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn相关"}},[v._v("#")]),v._v(" CDN相关")]),v._v(" "),s("p",[v._v("在校招述职中, 提到了cdn相关的知识, 一直以来对cdn相关的知识都是一知半解, 停留在面试八股的层面, 借此机会彻底梳理一下")]),v._v(" "),s("blockquote",[s("p",[v._v("CDN的全称是Content Delivery Network，即内容分发网络。由于CDN是为加快网络访问速度而被优化的网络覆盖层，因此被形象地称为“网络加速器”。")])]),v._v(" "),s("h4",{attrs:{id:"cdn简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn简介"}},[v._v("#")]),v._v(" CDN简介")]),v._v(" "),s("p",[v._v("cdn的实现思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节, 使内容传输更快、更稳定")]),v._v(" "),s("ol",[s("li",[v._v("实现方法:")])]),v._v(" "),s("p",[v._v("通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络, CDN系统能够实时地根据"),s("strong",[v._v("网络流量")]),v._v("和各节点的"),s("strong",[v._v("连接和负载")]),v._v("状况以及到用户的"),s("strong",[v._v("距离和响应时间")]),v._v("等综合信息将用户的请求重新导向离用户最近的服务节点上, 加快访问速度")]),v._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[v._v("目的和优势:")])]),v._v(" "),s("p",[v._v("使用户可就近取得所需内容，解决Internet网络拥挤的状况，提高用户访问网站的响应速度")]),v._v(" "),s("ul",[s("li",[v._v("CDN节点解决了跨运营商和跨地域访问的问题，访问延时大大降低")]),v._v(" "),s("li",[v._v("大部分请求在CDN边缘节点完成，CDN起到了分流作用，减轻了源站的负载")])]),v._v(" "),s("h4",{attrs:{id:"cdn的基本流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn的基本流程"}},[v._v("#")]),v._v(" CDN的基本流程")]),v._v(" "),s("p",[s("img",{attrs:{src:t(370),alt:"",title:":size=613x561"}})]),v._v(" "),s("p",[v._v("上图展示了使用cdn后的访问资源的流程, 首先我们来看一下不使用cdn访问资源的过程是怎样的")]),v._v(" "),s("ol",[s("li",[v._v("用户输入要访问资源的域名")]),v._v(" "),s("li",[v._v("浏览器向本地dns域名解析服务器请求解析该域名")]),v._v(" "),s("li",[v._v("本地dns服务器如果缓存了这个域名, 直接返回给用户\n如果没有缓存该域名, 以递归的方式向整个dns系统请求解析, 将结果反馈给用户")]),v._v(" "),s("li",[v._v("浏览器获得域名解析的结果, 即ip地址, 向服务器发起请求")]),v._v(" "),s("li",[v._v("服务器将请求结果返回给用户")])]),v._v(" "),s("p",[v._v("接下来看一下使用的cdn之后的结果")]),v._v(" "),s("ol",[s("li",[v._v("首先访问本地的dns, 如果没有命中, 继续递归或者迭代查找, 直到命中拿到对应的ip地址。")]),v._v(" "),s("li",[v._v("拿到对应的ip地址之后服务器端发送请求到目的地址, 注意这里返回的不直接是cdn服务器的ip地址, 而是全局负载均衡系统的ip地址")]),v._v(" "),s("li",[v._v("全局负载均衡系统会根据客户端的ip地址和请求的url和相应的区域负载均衡系统通信")]),v._v(" "),s("li",[v._v("区域负载均衡系统拿着这两个东西获取距离客户端最近且有相应资源的cdn缓存服务器的地址, 返回给全局负载均衡系统")]),v._v(" "),s("li",[v._v("全局负载均衡系统返回确定的cdn缓存服务器的地址给客户端")]),v._v(" "),s("li",[v._v("客户端请求缓存服务器上的文件")])]),v._v(" "),s("p",[v._v("简单来说, 其实cdn就是个放服务端资源的一个仓库, 康师傅的泡面如果不是有家门口的小卖部, 我们就得去人家的工厂门口拿, 有了小卖部, 我们只需要去一个卖康师傅&&有货的小卖部拿, 就是这个道理")]),v._v(" "),s("p",[v._v("其中有一个比较重要的点")]),v._v(" "),s("ul",[s("li",[v._v("在过程1里: 这个过程中, 有一个CNAME的过程, 我们访问cdn资源的地址一般是a.cloud.com或者类似的地址, 是一个公司的访问cdn的专用地址")]),v._v(" "),s("li",[v._v("但是我们用的cdn的服务却是第三方的, 即其实资源在他们的地址上比如tencent.cdn, 这时候就需要在dns查询的时候, 需要把我们访问a.cloud.com的地址映射到tencent.cdn的地址上")]),v._v(" "),s("li",[v._v("然后拿着映射后的地址再去走一遍dns解析, 成功之后才获取到第三方提供的全局负载均衡系统的ip, 再继续走后面的流程")])]),v._v(" "),s("h4",{attrs:{id:"cdn的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn的作用"}},[v._v("#")]),v._v(" CDN的作用")]),v._v(" "),s("p",[v._v("cdn的作用有很多, 这里简单讲述几点")]),v._v(" "),s("ol",[s("li",[v._v("加速访问")])]),v._v(" "),s("p",[v._v("可以使用户就近获取资源, 降低网络拥塞, 提高用户访问响应速率和命中率\n还提供服务器端加速, 解决由于用户访问量大造成的服务器过载问题")]),v._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[v._v("跨运营商, 跨地域覆盖")])]),v._v(" "),s("p",[v._v("CDN加速可以覆盖全球的线路, 通过和运营商合作, 部署IDC资源, 在全国骨干节点商, 合理部署cdn边缘分发存储节点, 充分利用带宽资源, 平衡源站流量")]),v._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[v._v("保障网络安全")])]),v._v(" "),s("p",[v._v("负载均衡和分布式存储技术一定程度上也给网站添加了一把保护伞")]),v._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[v._v("异地备援")])]),v._v(" "),s("p",[v._v("当某个服务器发生意外故障时, 系统将会调用其他临近的健康服务器节点进行服务, 进而提供接近100%的可靠性, 这就让你的网站可以做到永不宕机")]),v._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[v._v("节约成本, 让开发者更专注于业务本身")])]),v._v(" "),s("h4",{attrs:{id:"cdn的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn的应用场景"}},[v._v("#")]),v._v(" CDN的应用场景")]),v._v(" "),s("ol",[s("li",[v._v("网站站点/应用加速")])]),v._v(" "),s("p",[v._v("站点或者应用中大量静态资源的加速分发, 建议将站点内容进行动静分离")]),v._v(" "),s("ul",[s("li",[s("p",[v._v("动态文件可以结合云服务器ECS")])]),v._v(" "),s("li",[s("p",[v._v("静态资源如各类型图片、html、css、js文件等, 建议结合对象存储OSS存储海量静态资源, 可以有效加速内容加载速度, 轻松搞定网站图片、短视频等内容分发")])])]),v._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[v._v("视音频点播/大文件下载分发加速")])]),v._v(" "),s("p",[v._v("支持各类文件的下载、分发, 支持在线点播加速业务, 如mp4、flv视频文件或者平均单个文件大小在20M以上")]),v._v(" "),s("ul",[s("li",[v._v("主要的业务场景是视音频点播、大文件下载(如安装包下载)等, 建议搭配对象存储OSS使用, 可提升回源速度, 节约近2/3回源带宽成本")])]),v._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[v._v("视频直播加速")])]),v._v(" "),s("p",[v._v("视频流媒体直播服务, 支持媒资存储、切片转码、访问鉴权、内容分发加速一体化解决方案")]),v._v(" "),s("ul",[s("li",[v._v("结合弹性伸缩服务, 及时调整服务器带宽, 应对突发访问流量;")]),v._v(" "),s("li",[v._v("结合媒体转码服务, 享受高速稳定的并行转码, 且任务规模无缝扩展, 目前cdn直播加速已服务内部用户测试并优化")])]),v._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[v._v("移动应用加速")])]),v._v(" "),s("ul",[s("li",[v._v("移动APP更新文件(apk文件)分发")]),v._v(" "),s("li",[v._v("移动APP内图片、页面、短视频、UGC等内容的优化加速分发")]),v._v(" "),s("li",[v._v("提供httpdns服务, 避免dns劫持并获得实时精确的dns解析结果, 有效缩短用户访问时间, 提升用户体验")])]),v._v(" "),s("h4",{attrs:{id:"回源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回源"}},[v._v("#")]),v._v(" 回源")]),v._v(" "),s("p",[v._v("当cdn缓存服务器中没有符合客户端要求的资源的时候, 缓存服务器会请求上一级缓存服务器, 以此类推, 直到获取到, 最后如果还是没有, 就会回到我们自己的服务器去获取资源,\n那都有哪些时候会回源呢? "),s("strong",[v._v("没有资源")]),v._v(", "),s("strong",[v._v("资源过期")]),v._v(", "),s("strong",[v._v("访问的资源是不缓存资源")]),v._v("等都会导致回源, 其他情况欢迎小伙伴们补充~")]),v._v(" "),s("h4",{attrs:{id:"cdn缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn缓存"}},[v._v("#")]),v._v(" CDN缓存")]),v._v(" "),s("p",[v._v("缓存是用空间换时间的思路, 用多余的空间, 换取更快的访问速度")]),v._v(" "),s("ol",[s("li",[v._v("不使用cdn缓存时")])]),v._v(" "),s("p",[v._v("所用用户直接访问源服务器")]),v._v(" "),s("p",[s("img",{attrs:{src:t(371),alt:"",title:":size=482x397"}})]),v._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[v._v("使用cdn缓存")])]),v._v(" "),s("p",[v._v("客户端浏览器先检查是否有本地缓存是否过期")]),v._v(" "),s("p",[v._v("如果过期, 则向cdn边缘节点发起请求, cdn边缘节点会检测用户请求数据的缓存是否过期, 如果cdn数据没有过期, 则直接响应用户请求, 此时一个完成http请求结束")]),v._v(" "),s("p",[v._v("如果cdn数据已经过期, 那么CDN还需要向源站发出回源请求, 来拉取最新的数据")]),v._v(" "),s("p",[s("img",{attrs:{src:t(372),alt:"",title:":size=505x369"}})]),v._v(" "),s("h4",{attrs:{id:"关于cdn和api之间的区别-api是否能缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于cdn和api之间的区别-api是否能缓存"}},[v._v("#")]),v._v(" 关于CDN和API之间的区别(API是否能缓存?)")]),v._v(" "),s("blockquote",[s("p",[v._v("动态加速的对象是动态生成的网页, 动态加速一般是对针对内容(如数据库信息等)在用户与 - 源站之间建立高速通道, 通过路由优化、TCP加速等技术手段对动态内容进行加速, 降低节点到源站之间的时延, 从而大大降低了用户访问动态网页的延迟")])]),v._v(" "),s("p",[v._v("其实这个问题并没有找到比较合适的解答, 下面我想说一下资料总结的一些东西")]),v._v(" "),s("ul",[s("li",[v._v("我们使用cdn的原因是, 我们经常有一些比较频繁请求且容量比较大的文件, 并且更新频率不那么高的文件, 这些文件如果我们都放在自己的服务器上, 于客户端问题在于访问时间长\n于服务器端是占用服务器端的资源, 所以我们采用分布式的方式扔在cdn上")]),v._v(" "),s("li",[v._v("但是API不同, 首先他常更新, 其次他多和用户信息等相关联, 并且cdn判断是否缓存是依靠url, 意味着他只能缓存get请求, 所以他的应用范围是有限的, 并且api常更新, 推送更新到所有cdn节点同样是需要耗费资源的")]),v._v(" "),s("li",[v._v("所以API是不适合放在cdn上的, 但是如果你的内容是相对静态的, 不涉及和用户信息关联, 并且能在一段时间内容忍缓存, 更新不频繁, 那么也不是不能考虑")])])])}),[],!1,null,null,null);_.default=n.exports}}]);